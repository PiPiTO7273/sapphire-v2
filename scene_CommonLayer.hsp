
//プロフィール情報の表示を更新
#deffunc UpdateProfileDisp

	duio_ChangeTextBody duio_TextID2UIsetID("common_profile_name"),pfreg_dispname
	duio_ChangeTextBody duio_TextID2UIsetID("common_profile_badge"),pfreg_Badge
	duio_ChangeTextBody duio_TextID2UIsetID("common_profile_pfpoint"),strf("%.2f pts",pfreg_PFpoint)
	duio_ChangeTextBody duio_TextID2UIsetID("common_profile_numtickets"),"x"+str(pfreg_NumTickets)
	duio_ChangeTextBody duio_TextID2UIsetID("common_profile_numfragments"),"x"+str(pfreg_NumFragments)
	duio_ChangeTextBody duio_TextID2UIsetID("common_profile_numlepus"),str(pfreg_NumLepus)+" Lepus"

	return

//キーの押下を取得
#defcfunc IsPushed int _key
	if (bfKeyInputFlag(_key)==FALSE)&(KeyInputFlag(_key)==TRUE) :return TRUE
	return FALSE

//ギフトコードを有効化
#deffunc ExecGiftCode str _key

	sdim giftres:dim debugcmdflag

	//使用済みかどうか確認
	if duio_idsGet("_GiftCodeUsed."+_key)=="TRUE" :return 1

	switch _key

		case"EXDB1000L"
			debugcmdflag=TRUE
			pfreg_NumLepus+1000
			giftres="1000 Lepus"
		swbreak

		case"0LEPUS"
			pfreg_NumLepus=0
			giftres="{debug-code:0 lepus}"
		swbreak

		case"EXDBGEN1"
			debugcmdflag=TRUE
			DebugMode=TRUE
			giftres="{debug-code:デバッグモードを有効にしました。}"
		swbreak

		case"EXDBGEN0"
			debugcmdflag=TRUE
			DebugMode=FALSE
			giftres="{debug-code:デバッグモードを無効にしました。}"
		swbreak

		case"TEST"
			debugcmdflag=TRUE
			pfreg_NumFragments=10000
			giftres="あ"
		swbreak

		default
			//存在しないコード
			return 2
		swbreak
	swend

	//使用済みにしておく
	if debugcmdflag==FALSE {
		duio_idsWrite"_GiftCodeUsed."+_key,"TRUE"
		PortalWebSvc_SendProfile PlayerID,PlayerPassword,"XODA.GIFTCODE.USED."+_key,"1"
	}

	sdim tmprefstr
	mref tmprefstr,65
	tmprefstr=giftres

	UpdateProfileDisp

	return 0

*UpdatePreloader
	if GetNowCount()-preloader_interval@>int(1000.0/ /*limitf(double(cfunc64f(GetFPS)),1.0,1000.0)*/ 30.0) {
		preloader_interval@=GetNowCount()

		if ProcessMessage()==-1 :DxLib_End:end
		SetDrawScreen DX_SCREEN_BACK
		ClearDrawScreen
		SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
		DrawGraph DispWidth@-300-32,DispHeight@-64-32,hdximg_preloader@(preloader_framecount@\90),TRUE
		preloader_framecount@++

		ScreenFlip
	}
	return

*InitPlayOption
	//オブジェクトの配置
		dim playoption_objplace_select
		playoption_objplace_select=pfreg_Placement
		//後方互換性のために設定値を新バージョン仕様に変更
			switch pfreg_Placement
				case PLAYOPT_ID_OBJPLACE_NORMAL_OLD:playoption_objplace_select=PLAYOPT_ID_OBJPLACE_NORMAL:swbreak
				case PLAYOPT_ID_OBJPLACE_MIRROR_OLD:playoption_objplace_select=PLAYOPT_ID_OBJPLACE_MIRROR:swbreak
				case PLAYOPT_ID_OBJPLACE_SMIRROR_OLD:playoption_objplace_select=PLAYOPT_ID_OBJPLACE_SMIRROR:swbreak
				case PLAYOPT_ID_OBJPLACE_RANDOM_OLD:playoption_objplace_select=PLAYOPT_ID_OBJPLACE_RANDOM:swbreak
			swend
		//扱いやすいように-100
			playoption_objplace_select-100

	//ゲージの難易度
		dim playoption_gauge_select
		playoption_gauge_select=pfreg_GaugeType
		//後方互換性のために設定値を新バージョン仕様に変更
			switch pfreg_GaugeType
				case PLAYOPT_ID_GAUGE_ASSIST_OLD:playoption_gauge_select=PLAYOPT_ID_GAUGE_ASSIST:swbreak
				case PLAYOPT_ID_GAUGE_NORMAL_OLD:playoption_gauge_select=PLAYOPT_ID_GAUGE_NORMAL:swbreak
				case PLAYOPT_ID_GAUGE_EXPERT_OLD:playoption_gauge_select=PLAYOPT_ID_GAUGE_EXPERT:swbreak
				case PLAYOPT_ID_GAUGE_MADNESS_OLD:playoption_gauge_select=PLAYOPT_ID_GAUGE_MADNESS:swbreak
			swend
		//扱いやすいように-100
			playoption_gauge_select-100

	//ウィンドウレイアウト
		dim playoption_window_select
		playoption_window_select=pfreg_WindowLayout

	//目標スコア
		dim playoption_target_select
		playoption_target_select=pfreg_Target
		//後方互換性のために設定値を新バージョン仕様に変更
			switch pfreg_Target
				case PLAYOPT_ID_TARGET_MAX_OLD:playoption_target_select=PLAYOPT_ID_TARGET_100:swbreak
				case PLAYOPT_ID_TARGET_EX_OLD:playoption_target_select=PLAYOPT_ID_TARGET_EX:swbreak
				case PLAYOPT_ID_TARGET_S_OLD:playoption_target_select=PLAYOPT_ID_TARGET_S:swbreak
				case PLAYOPT_ID_TARGET_AAA_OLD:playoption_target_select=PLAYOPT_ID_TARGET_AAA:swbreak
				case PLAYOPT_ID_TARGET_AA_OLD:playoption_target_select=PLAYOPT_ID_TARGET_AA:swbreak
				case PLAYOPT_ID_TARGET_A_OLD:playoption_target_select=PLAYOPT_ID_TARGET_A:swbreak
				case PLAYOPT_ID_TARGET_MYBEST_OLD:playoption_target_select=PLAYOPT_ID_TARGET_MYBEST:swbreak
				case PLAYOPT_ID_TARGET_ONLINETOP_OLD:playoption_target_select=PLAYOPT_ID_TARGET_WR:swbreak
				case PLAYOPT_ID_TARGET_MISSION
					if curSceneTag!"#Mission" :playoption_target_select=PLAYOPT_ID_TARGET_MYBEST
				swbreak
			swend
		//扱いやすいように-100
			playoption_target_select-100

	gosub*UpdatePlayOptionUI

	return

*PlayOption_FrameProcess
	duio_ChangeTextBody duio_TextID2UIsetID("playoption_val_objspeed"),strf("x%.2f",pfreg_AddSpeed)		//オブジェクトの速さ
	duio_ChangeTextBody duio_TextID2UIsetID("playoption_val_judgeoffset"),str(pfreg_JudgeOffset)+" ms"		//判定調整
	duio_ChangeTextBody duio_TextID2UIsetID("playoption_val_volbgm"),str(volume_BGM)+" %"				//BGM音量
	duio_ChangeTextBody duio_TextID2UIsetID("playoption_val_volse"),str(volume_SE)+" %"					//SE音量
	duio_ChangeTextBody duio_TextID2UIsetID("playoption_val_volplay"),str(volume_PLAY)+" %"				//PLAY音量

	//ボタン押し続け判定
		//objspeed
		if duio_GetButtonPushTime(duio_ButtonID2UIsetID("playoption_button_objspeed_left"))>500 {
			if SceneCount\5==0 :pfreg_AddSpeed-0.05
			if pfreg_AddSpeed<0.1 :pfreg_AddSpeed=0.1
		}
		if duio_GetButtonPushTime(duio_ButtonID2UIsetID("playoption_button_objspeed_right"))>500 {
			if SceneCount\5==0 :pfreg_AddSpeed+0.05
			if pfreg_AddSpeed>10.0 :pfreg_AddSpeed=10.0
		}
		//judgeoffset
		if duio_GetButtonPushTime(duio_ButtonID2UIsetID("playoption_button_judgeoffset_left"))>500 {
			if SceneCount\5==0 :pfreg_JudgeOffset-1
		}
		if duio_GetButtonPushTime(duio_ButtonID2UIsetID("playoption_button_judgeoffset_right"))>500 {
			if SceneCount\5==0 :pfreg_JudgeOffset+1
		}
		//bgm音量
		if duio_GetButtonPushTime(duio_ButtonID2UIsetID("playoption_button_volbgm_left"))>500 {
			if SceneCount\5==0 :volume_BGM-5
			if volume_BGM<0 :volume_BGM=0
		}
		if duio_GetButtonPushTime(duio_ButtonID2UIsetID("playoption_button_volbgm_right"))>500 {
			if SceneCount\5==0 :volume_BGM+5
			if volume_BGM>100 :volume_BGM=100
		}
		//se音量
		if duio_GetButtonPushTime(duio_ButtonID2UIsetID("playoption_button_volse_left"))>500 {
			if SceneCount\5==0 :volume_SE-5
			if volume_SE<0 :volume_SE=0
		}
		if duio_GetButtonPushTime(duio_ButtonID2UIsetID("playoption_button_volse_right"))>500 {
			if SceneCount\5==0 :volume_SE+5
			if volume_SE>100 :volume_SE=100
		}
		//play音量
		if duio_GetButtonPushTime(duio_ButtonID2UIsetID("playoption_button_volplay_left"))>500 {
			if SceneCount\5==0 :volume_PLAY-5
			if volume_PLAY<0 :volume_PLAY=0
		}
		if duio_GetButtonPushTime(duio_ButtonID2UIsetID("playoption_button_volplay_right"))>500 {
			if SceneCount\5==0 :volume_PLAY+5
			if volume_PLAY>100 :volume_PLAY=100
		}

	//右クリックでリセット判定
		if insquare(cursorPosX,cursorPosY,420,206,420+110,206+35)&(cursorStatus&MOUSE_INPUT_RIGHT) {
			pfreg_JudgeOffset=0
		}

	return

*PlayOption_EventStack

	switch duio_GetButtonEventStack()
		case"playoption_objspeed_left":pfreg_AddSpeed=limitf(pfreg_AddSpeed-0.05,0.1,10.0):swbreak	//オブジェクトの速さ -
		case"playoption_objspeed_right":pfreg_AddSpeed=limitf(pfreg_AddSpeed+0.05,0.1,10.0):swbreak	//オブジェクトの速さ +
		case"playoption_judgeoffset_left":pfreg_JudgeOffset=limit(pfreg_JudgeOffset-1,-1000,1000):swbreak	//判定調整 -
		case"playoption_judgeoffset_right":pfreg_JudgeOffset=limit(pfreg_JudgeOffset+1,-1000,1000):swbreak	//判定調整 +
		case"playoption_volbgm_left":volume_BGM=limit(volume_BGM-5,0,100):swbreak		//BGM音量 -
		case"playoption_volbgm_right":volume_BGM=limit(volume_BGM+5,0,100):swbreak		//BGM音量 +
		case"playoption_volse_left":volume_SE=limit(volume_SE-5,0,100):swbreak		//SE音量 -
		case"playoption_volse_right":volume_SE=limit(volume_SE+5,0,100):swbreak		//SE音量 +
		case"playoption_volplay_left":volume_PLAY=limit(volume_PLAY-5,0,100):swbreak	//PLAY音量 -
		case"playoption_volplay_right":volume_PLAY=limit(volume_PLAY+5,0,100):swbreak	//PLAY音量 +

		case"help_objspeed_open":OpenHelpDialog"#Help-ObjSpeed":swbreak		//"オブジェクトの速度" ヘルプを開く
		case"help_objspeed_close":CloseHelpDialog"#Help-ObjSpeed":swbreak	//"オブジェクトの速度" ヘルプを閉じる
		case"help_judgeoffset_open":OpenHelpDialog"#Help-JudgeOffset":swbreak		//"判定調整" ヘルプを開く
		case"help_judgeoffset_close":CloseHelpDialog"#Help-JudgeOffset":swbreak	//"判定調整" ヘルプを閉じる
		case"help_objplace_open":OpenHelpDialog"#Help-ObjPlace":swbreak		//"オブジェクトの配置" ヘルプを開く
		case"help_objplace_close":CloseHelpDialog"#Help-ObjPlace":swbreak	//"オブジェクトの配置" ヘルプを閉じる
		case"help_gauge_open":OpenHelpDialog"#Help-Gauge":swbreak		//"ゲージの難易度" ヘルプを開く
		case"help_gauge_close":CloseHelpDialog"#Help-Gauge":swbreak		//"ゲージの難易度" ヘルプを閉じる
		case"help_window_open":OpenHelpDialog"#Help-Window":swbreak		//"ウィンドウレイアウト" ヘルプを開く
		case"help_window_close":CloseHelpDialog"#Help-Window":swbreak	//"ウィンドウレイアウト" ヘルプを閉じる
	swend

	//オブジェクトの配置
		repeat length(playoption_objplace_buttonid)
			if duio_GetButtonEventStack()=="ID:"+playoption_objplace_buttonid(cnt) {
				playoption_objplace_select=cnt
				gosub*UpdatePlayOptionUI
			}
		loop

	//ゲージの難易度
		repeat length(playoption_gauge_buttonid)
			if duio_GetButtonEventStack()=="ID:"+playoption_gauge_buttonid(cnt) {
				playoption_gauge_select=cnt
				gosub*UpdatePlayOptionUI
			}
		loop

	//ウィンドウレイアウト
		repeat length(playoption_window_buttonid)
			if duio_GetButtonEventStack()=="ID:"+playoption_window_buttonid(cnt) {
				if playoption_window_select&powf(2,cnt) {
					playoption_window_select-powf(2,cnt)		//ON→OFF
				} else {
					playoption_window_select+powf(2,cnt)		//OFF→ON
				}
				gosub*UpdatePlayOptionUI
			}
		loop

	//目標スコア
		repeat length(playoption_target_buttonid)
			if duio_GetButtonEventStack()=="ID:"+playoption_target_buttonid(cnt) {
				playoption_target_select=cnt
				gosub*UpdatePlayOptionUI
			}
		loop

	return

*UpdatePlayOptionUI

	if curSceneTag!"#Mission" :duio_SetButtonVisible duio_ButtonID2UIsetID("playoption_button_target_mission"),FALSE

	//オブジェクトの配置
		repeat 6
			if playoption_objplace_select==cnt {
				duio_ChangeButtonImage duio_ButtonID2UIsetID(playoption_objplace_buttonid(cnt)),playoption_objplace_hbuttonimg(cnt,1)
			} else {
				duio_ChangeButtonImage duio_ButtonID2UIsetID(playoption_objplace_buttonid(cnt)),playoption_objplace_hbuttonimg(cnt,0)
			}
		loop

	//ゲージの難易度
		repeat 6
			if playoption_gauge_select==cnt {
				duio_ChangeButtonImage duio_ButtonID2UIsetID(playoption_gauge_buttonid(cnt)),playoption_gauge_hbuttonimg(cnt,1)
			} else {
				duio_ChangeButtonImage duio_ButtonID2UIsetID(playoption_gauge_buttonid(cnt)),playoption_gauge_hbuttonimg(cnt,0)
			}
		loop

	//ウィンドウレイアウト
		repeat 3
			if playoption_window_select&powf(2,cnt) {
				duio_ChangeButtonImage duio_ButtonID2UIsetID(playoption_window_buttonid(cnt)),playoption_window_hbuttonimg(cnt,1)
			} else {
				duio_ChangeButtonImage duio_ButtonID2UIsetID(playoption_window_buttonid(cnt)),playoption_window_hbuttonimg(cnt,0)
			}
		loop

	//目標スコア
		repeat 8+1
			if playoption_target_select==cnt {
				duio_ChangeButtonImage duio_ButtonID2UIsetID(playoption_target_buttonid(cnt)),playoption_target_hbuttonimg(cnt,1)
			} else {
				duio_ChangeButtonImage duio_ButtonID2UIsetID(playoption_target_buttonid(cnt)),playoption_target_hbuttonimg(cnt,0)
			}
		loop

	pfreg_Placement=playoption_objplace_select+100
	pfreg_GaugeType=playoption_gauge_select+100
	pfreg_WindowLayout=playoption_window_select
	pfreg_Target=playoption_target_select+100

	return

*SaveClientData
	exist"contents/savedata.bin"
	randomize 8881109
		repeat strsize
			poke ClientSaveData,cnt,peek(ClientSaveData,cnt)^rnd(256)
		loop
	randomize

	bsave"contents/savedata.bin",ClientSaveData

	exist"contents/savedata.bin"
	randomize 8881109
		repeat strsize
			poke ClientSaveData,cnt,peek(ClientSaveData,cnt)^rnd(256)
		loop
	randomize
	return

*ApplyClientConfig

	dim DispWidth:dim DispHeight
	switch csconf_DispResolution
		case 0:DispWidth=800:DispHeight=600:swbreak
		case 1:DispWidth=1024:DispHeight=768:swbreak
		case 2:DispWidth=1280:DispHeight=720:swbreak
		case 3:DispWidth=1366:DispHeight=768:swbreak
		case 4:DispWidth=1920:DispHeight=1080:swbreak
	swend

	dim SubThreadLimit
	switch csconf_SubThreadLimit
		case 0:SubThreadLimit=1000:swbreak
		case 1:SubThreadLimit=1:swbreak
		case 2:SubThreadLimit=2:swbreak
		case 3:SubThreadLimit=4:swbreak
		case 4:SubThreadLimit=8:swbreak
		case 5:SubThreadLimit=-2:swbreak
		case 6:SubThreadLimit=-4:swbreak
	swend

	dim TexLv
	TexLv=powf(2,csconf_TextureLevel)

	dim MSAAflag
	MSAAflag=csconf_Antialias
	SetDrawMode MSAAflag

	if csconf_proxyIP!"" {
		if csconf_proxyPort=="" :setProxy csconf_proxyIP,"":else:setProxy csconf_proxyIP+":"+csconf_proxyPort,""
	}
	return