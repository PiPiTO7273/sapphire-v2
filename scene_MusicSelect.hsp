
//譜面の項目ボタンを作成
//CreateMapItem _type,_folder_initflag,_search
//	_type	MAPITEM_TYPE_GROUP or MAPITEM_TYPE_SINGLE
//	_folder	フォルダ名
//	_initflag	項目をすべて削除してから作成するフラグ
//	_search	検索文字列（空欄で検索をしない）
#define CreateMapItem(%1,%2,%3,%4="") _CreateMapItem %1,%2,%3,%4

//UUIDから譜面の項目IDと難易度を取得する
//SearchDBfromUUID _uuid,_item,_lv
//	_uuid	検索する譜面のUUID
//	_item	項目IDを代入する変数
//	_lv		難易度を代入する変数
#deffunc SearchDBfromUUID str _uuid,var _item,var _lv
	dim searchdb_item:dim searchdb_lv:dim searchdb_res
	repeat mapgroup_max
		searchdb_item=cnt
		repeat 3
			searchdb_lv=cnt
			if map_uuid(searchdb_item,searchdb_lv)==_uuid {
				_item=searchdb_item
				_lv=searchdb_lv
				searchdb_res=TRUE
				break
			}
		loop
	loop
	return searchdb_res

//項目IDと難易度からアンロック状態を取得する
//IsUnlocked _item,_lv,_unlimitedflag
//	_item			項目ID
//	_lv				難易度
//	_unlimitedflag		Unlimitedモードの状態を考慮するか
#define ctype IsUnlocked(%1,%2,%3=0) _IsUnlocked(%1,%2,%3)
#defcfunc _IsUnlocked int x,int y,int unlimitedflag
	if AllUnlock :return TRUE		//デバッグ用フラグ
	if unlimitedflag&UnlimitedTime>0 :return TRUE
	if duio_idsGet("_MapUnlock."+map_uuid(x,y))!"TRUE"&mapdb_unlocklepus(x,y)!0 :return FALSE
	return TRUE

//Internet Rankingを同期する
*syncIR
	sdim IRrawdata:sdim IRdivdata
	sdim IRproc_prm
	sdim IRproc_data_UUID
	sdim IRproc_data_Rank
	sdim IRproc_data_PlayerName
	sdim IRproc_data_Score
	dim item:dim lv
	IRrawdata=PortalWebSvc_DownloadIRraw()
	split IRrawdata,"\n",IRdivdata
	repeat length(IRdivdata)
		split IRdivdata(cnt),"=",IRproc_prm
		split IRproc_prm(0),".",IRproc_data_UUID,IRproc_data_Rank
		split IRproc_prm(1),",",IRproc_data_PlayerName,IRproc_data_Score
		strrep IRproc_data_Rank,"RANK#",""

		if IRproc_data_UUID!""&int(IRproc_data_Rank)!0 {
			SearchDBfromUUID IRproc_data_UUID,item,lv
			if stat {
				mapdb_ir_name(item,lv,int(IRproc_data_Rank)-1)=IRproc_data_PlayerName
				mapdb_ir_score(item,lv,int(IRproc_data_Rank)-1)=int(IRproc_data_Score)
				if IRproc_data_PlayerName==PlayerID {	//自分の順位
					mapdb_ir_myrank(item,lv)=int(IRproc_data_Rank)-1
				}
				if int(IRproc_data_Rank)>mapdb_ir_regmax(item,lv) {
					mapdb_ir_regmax(item,lv)=int(IRproc_data_Rank)
				}

				if IRproc_data_PlayerName!"" {
					logmes GetTimeStamp()+" [irsync] Registered IR (uuid="+IRproc_data_UUID+",("+item+","+lv+"),name="+IRproc_data_PlayerName+",score="+IRproc_data_Score+",rank="+IRproc_data_Rank+")"
				}
			}
		}
	loop

	return

//プレイヤーの記録を同期
*syncRecords
	sdim mybestrawdata:sdim mybestdivdata
	dim item:dim lv:sdim INIkey:sdim INIvalue
	mybestrawdata=PortalWebSvc_DownloadRecord(PlayerID)
	split mybestrawdata,"\n",mybestdivdata

	repeat length(mybestdivdata)
		if strmid(mybestdivdata(cnt),0,1)=="[" {	//セクション検出
			strrep mybestdivdata(cnt),"[",""
			strrep mybestdivdata(cnt),"]",""
			SearchDBfromUUID mybestdivdata(cnt),item,lv
			logmes GetTimeStamp()+" Import Records (UUID="+mybestdivdata(cnt)+",Item="+item+",Level="+lv+")"
		} else {
			//通常の処理
			split mybestdivdata(cnt),"=",INIkey,INIvalue
			switch INIkey

				case"Score":mapdb_mybest_score(item,lv)=int(INIvalue):swbreak							//スコア
				case"NumExcellent":mapdb_mybest_judgedetail(item,lv,JUDGEID_EXCELLENT)=int(INIvalue):swbreak	//EXCELLENT数
				case"NumGreat":mapdb_mybest_judgedetail(item,lv,JUDGEID_GREAT)=int(INIvalue):swbreak			//GREAT数
				case"NumGood":mapdb_mybest_judgedetail(item,lv,JUDGEID_GOOD)=int(INIvalue):swbreak			//GOOD数
				case"NumBad":mapdb_mybest_judgedetail(item,lv,JUDGEID_BAD)=int(INIvalue):swbreak			//BAD数
				case"NumMiss":mapdb_mybest_judgedetail(item,lv,JUDGEID_MISS)=int(INIvalue):swbreak			//MISS数
				case"NumEarly":mapdb_mybest_judgedetail(item,lv,JUDGEID_EARLY)=int(INIvalue):swbreak			//EARLY数
				case"NumLate":mapdb_mybest_judgedetail(item,lv,JUDGEID_LATE)=int(INIvalue):swbreak			//LATE数
				case"MaxCombo":mapdb_mybest_maxcombo(item,lv)=int(INIvalue):swbreak						//最大コンボ
				case"Type":mapdb_mybest_cleartype(item,lv)=INIvalue:swbreak								//クリアの種類
				case"Ability":mapdb_mybest_pfpoint(item,lv)=double(INIvalue):swbreak						//能力値
				case"Date":mapdb_mybest_regdate(item,lv)=INIvalue:swbreak								//記録日時

				case"Gauge_64"																	//ゲージ推移
					sdim tmphexbuf
					ConvHEXdec tmphexbuf,INIvalue
					memcpy mapdb_mybest_gauge4binhex(item,lv),tmphexbuf,350
				swbreak

				case"Score_64":mapdb_mybest_score4binhex(item,lv)=INIvalue:swbreak

			swend
		}
	loop

	return

*scene_MusicSelect_Init

	gosub*UploadAllSavedata
	gosub*syncIR
	gosub*syncRecords

	dim mapitem_max

	CreateMapItem MAPITEM_TYPE_GROUP,"",TRUE

	//変数初期化
	dim SceneCount
	dim SceneTime
	dim DecideTime
	sdim DecideJumpScene
	dim mapitem_cursorwheel
	dim mapitem_scrollfix
	dim mapitem_scrollpos
	dim mapitem_scrollclickmode
	dim folder_cur
	dim folder_mode
	dim sort_mode
	dim curselect_count
	dim curpreview_time
	dim irbuf_wheel
	dim decidecount
	dim optionwindowflag
	dim optionwindowclosecount
	sdim helpscene
	dim curPlayhPreview
	dim AutoPlayFlag
	dim SearchItem_hInput
	dim currentSetMission
	currentSetMission=-1

	helpscene=""
	optionwindowclosecount=-1
	decidecount=-1
	curpreview_time=-1

	//総合能力値を計算
		ddim abpointarr,mapgroup_max*3
		repeat mapgroup_max*3
			abpointarr(cnt)=mapdb_mybest_pfpoint(cnt/3,cnt\3)
		loop
		sortval abpointarr,1
		repeat 10
			pfreg_PFpoint(cnt)+abpointarr(cnt)
		loop
		pfreg_PFpoint(cnt)/10.0

	UpdateProfileDisp

	//シーン別カウンタを初期化
		duio_InitAllCount"#MusicSelect"
		duio_InitAllCount"#Common-Profile"
		duio_InitAllCount"#Dialog-KeywordSearch-Nomatch"
		duio_InitAllCount"#PlayOption"
		duio_InitAllCount"#MusicSelect-Decide"

	//フォルダとソートの表示を初期化
		duio_ChangeButtonImage duio_ButtonID2UIsetID("musicselect_button_folder"),hdximg(imusicselect_folder_all)
		duio_ChangeButtonImage duio_ButtonID2UIsetID("musicselect_button_sort"),hdximg(imusicselect_sort_default)

	gosub*InitPlayOption
	gosub*scene_MusicSelect_UpdateMetadataString

	//シーンをアクティブ化
		duio_SetActiveScene"#MusicSelect",TRUE

	//トランジション (out)
		duio_SetAllImageOutro"#Shutter"
		duio_PlaySound"shutter_out"

	//BGM再生
	if BASS_ChannelIsActive(duio_GetHandle("main"))!BASS_ACTIVE_PLAYING :duio_PlaySound"main"
	duio_SetVolume"main",1.0

	//背景動画
	if GetMovieStateToGraph(hdximg(ibg_common))==0 :PlayMovieToGraph hdximg(ibg_common),DX_PLAYTYPE_LOOP

	duio_PlaySound"voice_anyselect"

	return

*scene_MusicSelect

	//UIパーツ
	if decidecount!-1 {
		switch DecideJumpScene
			case"play"

				DrawCommonBackground FrameCount

				SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
				DrawGraph 0,0,hdximg(icommon_bglayer),TRUE

				setease 0,BufWidth,ease_cubic_out
				SetDrawBlendMode DX_BLENDMODE_ALPHA,100
				DrawBox getease(decidecount*(1000.0/duio_GetFPS())-250,400),0,BufWidth,BufHeight,$65FAFF,TRUE
				SetDrawBlendMode DX_BLENDMODE_ALPHA,80
				DrawBox getease(decidecount*(1000.0/duio_GetFPS())-250,320),0,BufWidth,BufHeight,$FF58E9,TRUE
				SetDrawBlendMode DX_BLENDMODE_ALPHA,50
				DrawBox getease(decidecount*(1000.0/duio_GetFPS())-220,400),0,BufWidth,BufHeight,$FFFFFF,TRUE
				SetDrawBlendMode DX_BLENDMODE_ALPHA,256
				DrawBox getease(decidecount*(1000.0/duio_GetFPS())-200,300),0,BufWidth,BufHeight,$FFFFFF,TRUE

				SetDrawScreen hdximg(itmplayer)

			swbreak
		swend
	}

	//背景
		SetDrawBlendMode DX_BLENDMODE_ALPHA,256
		DrawExtendGraph 0,0,BufWidth,BufHeight,hdximg(ibg_common),FALSE

	//シーン描画
		if decidecount*(1000.0/duio_GetFPS())<1000 {
			dim shapemovepos:shapemovepos=-(1000.0/duio_GetFPS()*SceneCount)/15
			SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
			DrawGraph shapemovepos\1920,20,hdximg(icommon_ironline),TRUE
			DrawGraph shapemovepos\1920+1920,20,hdximg(icommon_ironline),TRUE

			duio_Draw"#MusicSelect"
			duio_Draw"#Common-Profile"
			duio_Draw"#Dialog-KeywordSearch-Nomatch"
		}

	//楽曲プレビュー >> BGMのフェード処理
		if curpreview_time!-1 {
			setease 0,1,ease_linear
			duio_SetVolume"main",geteasef(curpreview_time-9000,500)
		} else {
			duio_SetVolume"main",1.0
		}

	if DecideJumpScene!"play" {

		//スクロール処理
			if insquare(cursorPosX,cursorPosY,662,0,BufWidth,BufHeight)&mapitem_max!0 {
				mapitem_cursorwheel=cursorWheel
				repeat mapitem_max
					duio_SetButtonPositionY mapitem_uisetid(cnt),duio_GetButtonPositionY(mapitem_uisetid(cnt))+mapitem_cursorwheel
				loop
				if duio_GetButtonPositionY(mapitem_uisetid(0))>159&mapitem_cursorwheel>0 {
					mapitem_scrollfix=duio_GetButtonPositionY(mapitem_uisetid(0))-159
					repeat mapitem_max
						duio_SetButtonPositionY mapitem_uisetid(cnt),duio_GetButtonPositionY(mapitem_uisetid(cnt))-mapitem_scrollfix
					loop
				}
				if duio_GetButtonPositionY(mapitem_uisetid(mapitem_max-1))<BufHeight-64-386&mapitem_cursorwheel<0 {
					mapitem_scrollfix=(BufHeight-64-386)-duio_GetButtonPositionY(mapitem_uisetid(mapitem_max-1))
					repeat mapitem_max
						duio_SetButtonPositionY mapitem_uisetid(cnt),duio_GetButtonPositionY(mapitem_uisetid(cnt))+mapitem_scrollfix
					loop
				}
			}

		//スクロール位置を特定
			if mapitem_max!0 {
				SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
				mapitem_scrollpos=duio_GetButtonPositionY(mapitem_uisetid(mapitem_max-1))-duio_GetButtonPositionY(mapitem_uisetid(0))-BufHeight+64+386+159
			}

		//スクロールバー
			if insquare(cursorPosX,cursorPosY,1885,140,1885+20,140+710)&(cursorStatus&MOUSE_INPUT_LEFT) :mapitem_scrollclickmode=TRUE
			if mapitem_scrollclickmode {
				cursorPosY=limit(cursorPosY,140,140+710)
				repeat mapitem_max
					duio_SetButtonPositionY mapitem_uisetid(cnt),159+406*(cnt/4)-int(double(mapitem_scrollpos)/700.0*double(cursorPosY-140))
				loop
				if (cursorStatus&MOUSE_INPUT_LEFT)==FALSE :mapitem_scrollclickmode=FALSE
			}
			DrawGraph 1870,130+int(700.0*(-double(duio_GetButtonPositionY(mapitem_uisetid(0))-159)/double(mapitem_scrollpos))),hdximg(imusicselect_itemscroll_circle),TRUE

		//選択中の難易度を強調表示
			if SceneTime>750 {
				setease 1,1.2,ease_linear+ease_loop
					EaseWidth=int(64.0*geteasef(SceneTime-750,250))
					EaseHeight=int(33.0*geteasef(SceneTime-750,250))
					EasePosX=114+160*curselect_lv+64/2-EaseWidth/2
					EasePosY=330+33/2-EaseHeight/2

				DrawExtendGraph EasePosX,EasePosY,EasePosX+EaseWidth,EasePosY+EaseHeight,hdximg(imusicselect_item_normal+curselect_lv),TRUE
			}
		
		//IR表示
			SetDrawScreen hdximg(imusicselect_ir)
			ClearDrawScreen

			//スクロール処理
				if insquare(cursorPosX,cursorPosY,30,829,30+290,829+116) :irbuf_wheel+cursorWheel/3	//移動量が多すぎるので
				if irbuf_wheel>0 :irbuf_wheel=0
				if irbuf_wheel<-24*100+116 :irbuf_wheel=-24*100+116

			//描画
				dim tmpdrawpos
				tmpdrawpos+irbuf_wheel
				repeat 100
		
					//アイコン
					SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,limit(SceneTime/2-300,0,255)
					switch cnt
						case 0:DrawGraph 0,tmpdrawpos,hdximg(imusicselect_ir_icon_1),TRUE:swbreak
						case 1:DrawGraph 0,tmpdrawpos,hdximg(imusicselect_ir_icon_2),TRUE:swbreak
						case 2:DrawGraph 0,tmpdrawpos,hdximg(imusicselect_ir_icon_3),TRUE:swbreak
						default:DrawGraph 0,tmpdrawpos,hdximg(imusicselect_ir_icon_other),TRUE:swbreak
					swend
		
					//各順位の名前とスコア
					SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
					DrawStringToHandle 30,tmpdrawpos+1,str(cnt+1),$FFFFFF,duio_GetFontHandle("ps16")
					if mapdb_ir_name(curselect_item,curselect_lv,cnt)=="" {
						DrawStringToHandle 55,tmpdrawpos+1,"----",$FFFFFF,duio_GetFontHandle("ps16")
					} else {
						DrawStringToHandle 55,tmpdrawpos+1,mapdb_ir_name(curselect_item,curselect_lv,cnt),$FFFFFF,duio_GetFontHandle("ps16")
					}
					DrawStringToHandle 190,tmpdrawpos+1,strf("%08d",mapdb_ir_score(curselect_item,curselect_lv,cnt)),$FFFFFF,duio_GetFontHandle("ps16")
		
					tmpdrawpos+24
					if tmpdrawpos>116 :break
				loop

			//IRウィンドウ >> 共通レイヤー
				SetDrawScreen hcommonLayer
				SetDrawBlendMode DX_BLENDMODE_ALPHA,256
				DrawGraph 30,829,hdximg(imusicselect_ir),TRUE

		//自己ベスト
			setease 0,350-1,ease_cubic_out
			repeat getease(curselect_count,60),1
				DrawLineAA d2f(280+cnt-1),d2f(535+100-peek(mapdb_mybest_gauge4binhex(curselect_item,curselect_lv),cnt-1)),d2f(280+cnt+1),d2f(535+100-peek(mapdb_mybest_gauge4binhex(curselect_item,curselect_lv),cnt)+2),$C8C8C8
			loop
	}

	//検索
		if CheckKeyInput(SearchItem_hInput)==0 {
			//検索文字列を取得
				sdim curSearchWord
				cfunc64v GetKeyInputString,varptr64(curSearchWord),SearchItem_hInput
				curSearchWord=cnvatos(curSearchWord)

			//IMEのUIを設定
				SetKeyInputStringColor2 DX_KEYINPSTRCOLOR_IME_STR_BACK,$00E1E9
				SetKeyInputStringColor2 DX_KEYINPSTRCOLOR_IME_SELECT_STR_BACK,$FFFFFF
				SetKeyInputStringColor2 DX_KEYINPSTRCOLOR_IME_CONV_WIN_STR,$000000
				SetKeyInputStringColor2 DX_KEYINPSTRCOLOR_IME_CONV_WIN_SELECT_STR,$222222
				SetKeyInputStringColor2 DX_KEYINPSTRCOLOR_IME_CONV_WIN_SELECT_STR_BACK,$EEEEEE
				SetKeyInputStringColor2 DX_KEYINPSTRCOLOR_IME_CONV_WIN_BACK,$FFFFFF
				SetKeyInputStringColor2 DX_KEYINPSTRCOLOR_IME_CONV_WIN_EDGE,$00E1E9
				SetKeyInputStringFont duio_GetFontHandle("rom1cm16")

			//入力中の文字列を描画
				if duio_GetImageCount(duio_ImageID2UIsetID("musicselect_search_bg"))>200 {
					SetDrawBlendMode DX_BLENDMODE_ALPHA,256
					DrawKeyInputString 1375,156,SearchItem_hInput
				}

			//改行コードを検出（ENTERで検索）
				if checkLF(curSearchWord) {
					delLF curSearchWord
					duio_SetImageOutro duio_ImageID2UIsetID("musicselect_search_bg"),TRUE
					DeleteKeyInput SearchItem_hInput
	
					CreateMapItem folder_mode,folder_dropdown_event(folder_cur),TRUE,curSearchWord
				}

			//カーソル点滅
				if SceneCount/8\2==0 :SetKeyInputStringColor2 DX_KEYINPSTRCOLOR_NORMAL_CURSOR,$000000:else:SetKeyInputStringColor2 DX_KEYINPSTRCOLOR_NORMAL_CURSOR,$FFFFFF
		} else {
			//入力終了
			if duio_GetImageOutroFlag(duio_ImageID2UIsetID("musicselect_search_bg"))==FALSE&CheckKeyInput(SearchItem_hInput)!-1 {
				duio_SetImageOutro duio_ImageID2UIsetID("musicselect_search_bg"),TRUE
				DeleteKeyInput SearchItem_hInput

				//フィルタ処理開始
				CreateMapItem folder_mode,folder_dropdown_event(folder_cur),TRUE,curSearchWord
			}
		}

	curselect_count++

	//オプション設定
	if optionwindowflag {
		gosub*PlayOption_FrameProcess
		if optionwindowclosecount!-1 :optionwindowclosecount+FrameTime
		if optionwindowclosecount>1000 :optionwindowflag=FALSE

		//シーン別設定
		duio_SetButtonVisible duio_ButtonID2UIsetID("playoption_mission_dummy"),FALSE
		duio_SetImageVisible duio_ImageID2UIsetID("playoption_mission_img"),FALSE
		duio_Draw"#PlayOption"
	}

	if helpscene!"" :duio_Draw helpscene

	if decidecount!-1 {

		switch DecideJumpScene

			//プレイ開始
			case"play"
				SetDrawScreen hcommonLayer

				dim EaseWidth:dim EaseHeight:dim EasePosX:dim EasePosY
				setease 1,1.2,ease_cubic_out
				EaseWidth=int(double(geteasef(decidecount*(1000.0/duio_GetFPS()),400))*double(BufWidth))
				EaseHeight=int(double(geteasef(decidecount*(1000.0/duio_GetFPS()),400))*double(BufHeight))
				EasePosX=BufWidth/2-EaseWidth/2
				EasePosY=BufHeight/2-EaseHeight/2

				setease 256,0,ease_cubic_out
				SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,getease(decidecount*(1000.0/duio_GetFPS()),400)
				DrawExtendGraph EasePosX,EasePosY,EasePosX+EaseWidth,EasePosY+EaseHeight,hdximg(itmplayer),TRUE

				setease 0,40,ease_cubic_out
				duio_ChangeTextBody duio_TextID2UIsetID("musicdecide_loadprogress"),str(getease(decidecount*FrameTime,1500))

				duio_Draw"#MusicSelect-Decide"

				if (decidecount*(1000.0/duio_GetFPS()))>1500 {
					ClearMapItem
					GameplayMode=GAMEMODE_FREEPLAY	//ゲームモード変更
					gosub*scene_MusicSelect_free
					gosub*scene_Gameplay_Init
					curSceneTag="#Gameplay"
				}
			swbreak

			//ロビーへ戻る
			case"backscene"
				duio_Draw"#Shutter"

				if decidecount*FrameTime>1000 {
					ClearMapItem
					gosub*scene_MusicSelect_PauseAllPreview
					PauseMovieToGraph hdximg(ibg_common)
					gosub*scene_Lobby_Init
					curSceneTag="#Lobby"
					return
				}
			swbreak

		swend

		decidecount++
	}

	if SceneTime<1000 {
		duio_Draw"#Shutter"
	}

	if IsPushed(KEY_INPUT_ESCAPE)&decidecount==-1 :duio_SetEventStack"backscene"

	if duio_GetButtonEventStack()!"" :gosub*scene_MusicSelect_eventstack
	
	if curpreview_time!-1 :curpreview_time+FrameTime

	return

//イベントのスタックを取得・処理
*scene_MusicSelect_eventstack

	//フォルダ選択
	if duio_GetButtonEventStack()=="folder_dropdown"&duio_GetButtonVisible(duio_ButtonID2UIsetID(folder_dropdown_id(0)))==FALSE {
		//開く
		repeat 22
			duio_SetButtonVisible duio_ButtonID2UIsetID(folder_dropdown_id(cnt)),TRUE
			duio_SetButtonOutro duio_ButtonID2UIsetID(folder_dropdown_id(cnt)),FALSE
		loop
	} else {
		//閉じる
		repeat 22
			if folder_dropdown_event(cnt)==duio_GetButtonEventStack() {
				duio_ChangeButtonImage duio_ButtonID2UIsetID("musicselect_button_folder"),hdximg(imusicselect_folder_all+cnt)
			}
			duio_SetButtonOutro duio_ButtonID2UIsetID(folder_dropdown_id(cnt)),TRUE
		loop
	}

	//ソート選択
	if duio_GetButtonEventStack()=="sort_dropdown"&duio_GetButtonVisible(duio_ButtonID2UIsetID(sort_dropdown_id(0)))==FALSE {
		//開く
		repeat 6
			duio_SetButtonVisible duio_ButtonID2UIsetID(sort_dropdown_id(cnt)),TRUE
			duio_SetButtonOutro duio_ButtonID2UIsetID(sort_dropdown_id(cnt)),FALSE
		loop
	} else {
		//閉じる
		repeat 6
			if sort_dropdown_event(cnt)==duio_GetButtonEventStack() {
				duio_ChangeButtonImage duio_ButtonID2UIsetID("musicselect_button_sort"),hdximg(imusicselect_sort_default+cnt)
			}
			duio_SetButtonOutro duio_ButtonID2UIsetID(sort_dropdown_id(cnt)),TRUE
		loop
	}

	switch duio_GetButtonEventStack()

		
		case"folder_dropdown_all":CreateMapItem MAPITEM_TYPE_GROUP,"folder_dropdown_all",TRUE:swbreak			//すべての楽曲
		case"folder_dropdown_alllv":CreateMapItem MAPITEM_TYPE_SINGLE,"folder_dropdown_alllv",TRUE:swbreak		//すべてのレベル
		case"folder_dropdown_lv1_4":CreateMapItem MAPITEM_TYPE_SINGLE,"folder_dropdown_lv1_4",TRUE:swbreak		//レベル１〜４の楽曲
		case"folder_dropdown_lv5_8":CreateMapItem MAPITEM_TYPE_SINGLE,"folder_dropdown_lv5_8",TRUE:swbreak		//レベル５〜８の楽曲
		case"folder_dropdown_lv9_11":CreateMapItem MAPITEM_TYPE_SINGLE,"folder_dropdown_lv9_11",TRUE:swbreak	//レベル９〜１１の楽曲
		case"folder_dropdown_lv12":CreateMapItem MAPITEM_TYPE_SINGLE,"folder_dropdown_lv12",TRUE:swbreak		//レベル１２の楽曲
		case"folder_dropdown_ex":CreateMapItem MAPITEM_TYPE_SINGLE,"folder_dropdown_ex",TRUE:swbreak			//EXランクでクリアした楽曲
		case"folder_dropdown_s":CreateMapItem MAPITEM_TYPE_SINGLE,"folder_dropdown_s",TRUE:swbreak			//Sランクでクリアした楽曲
		case"folder_dropdown_aaa":CreateMapItem MAPITEM_TYPE_SINGLE,"folder_dropdown_aaa",TRUE:swbreak			//AAAランクでクリアした楽曲
		case"folder_dropdown_aa":CreateMapItem MAPITEM_TYPE_SINGLE,"folder_dropdown_aa",TRUE:swbreak			//AAランクでクリアした楽曲
		case"folder_dropdown_a":CreateMapItem MAPITEM_TYPE_SINGLE,"folder_dropdown_a",TRUE:swbreak			//Aランクでクリアした楽曲
		case"folder_dropdown_failed":CreateMapItem MAPITEM_TYPE_SINGLE,"folder_dropdown_failed",TRUE:swbreak	//クリアできなかった楽曲
		case"folder_dropdown_assist":CreateMapItem MAPITEM_TYPE_SINGLE,"folder_dropdown_assist",TRUE:swbreak	//アシスト付きでクリアした楽曲
		case"folder_dropdown_clear":CreateMapItem MAPITEM_TYPE_SINGLE,"folder_dropdown_clear",TRUE:swbreak		//クリアした楽曲
		case"folder_dropdown_expert":CreateMapItem MAPITEM_TYPE_SINGLE,"folder_dropdown_expert",TRUE:swbreak	//EXPERTゲージでクリアした楽曲
		case"folder_dropdown_madness":CreateMapItem MAPITEM_TYPE_SINGLE,"folder_dropdown_madness",TRUE:swbreak	//MADNESSゲージでクリアした楽曲
		case"folder_dropdown_fc":CreateMapItem MAPITEM_TYPE_SINGLE,"folder_dropdown_fc",TRUE:swbreak			//フルコンボクリアした楽曲
		case"folder_dropdown_allex":CreateMapItem MAPITEM_TYPE_SINGLE,"folder_dropdown_allex",TRUE:swbreak		//ALL EXCELLENTでクリアした楽曲
		case"folder_dropdown_normal":CreateMapItem MAPITEM_TYPE_SINGLE,"folder_dropdown_normal",TRUE:swbreak	//NORMAL難易度
		case"folder_dropdown_hard":CreateMapItem MAPITEM_TYPE_SINGLE,"folder_dropdown_hard",TRUE:swbreak		//HARD難易度
		case"folder_dropdown_chaos":CreateMapItem MAPITEM_TYPE_SINGLE,"folder_dropdown_chaos",TRUE:swbreak		//CHAOS難易度
		case"folder_dropdown_s1":CreateMapItem MAPITEM_TYPE_GROUP,"folder_dropdown_s1",TRUE:swbreak			//シーズン１の楽曲

		case"sort_dropdown_default":SortMapItem MAPITEM_SORT_DEFAULT:swbreak		//デフォルトでソート
		case"sort_dropdown_name":SortMapItem MAPITEM_SORT_NAME:swbreak			//曲名でソート
		case"sort_dropdown_level":SortMapItem MAPITEM_SORT_LEVEL:swbreak			//難易度でソート
		case"sort_dropdown_score":SortMapItem MAPITEM_SORT_SCORE:swbreak			//自己ベストスコアでソート
		case"sort_dropdown_bpm":SortMapItem MAPITEM_SORT_BPM:swbreak			//BPMでソート
		case"sort_dropdown_cleartype":SortMapItem MAPITEM_SORT_CLEARTYPE:swbreak	//自己ベストのクリアの種類でソート

		//難易度選択を閉じる
		case"levelselect_close"
			duio_SetButtonEnable duio_ButtonID2UIsetID("musicselect_levelselect_close"),FALSE
			gosub*scene_MusicSelect_CloseLevelSelect
			curpreview_time=-1
			gosub*scene_MusicSelect_PauseAllPreview
		swbreak

		//検索
		case"search"
			if CheckKeyInput(SearchItem_hInput)==0 {
				duio_SetImageOutro duio_ImageID2UIsetID("musicselect_search_bg"),TRUE
				DeleteKeyInput SearchItem_hInput
			} else {
				SearchItem_hInput=MakeKeyInput(40,TRUE,FALSE,FALSE)
				SetActiveKeyInput SearchItem_hInput

				duio_SetImageVisible duio_ImageID2UIsetID("musicselect_search_bg"),TRUE
				duio_SetImageCount duio_ImageID2UIsetID("musicselect_search_bg"),0
			}
		swbreak

		//検索結果が見つかりません→OK
		case"dialog_keywordsearch_nomatch_close"
			duio_SetImageOutro duio_ImageID2UIsetID("dialog_keywordsearch_nomatch"),TRUE
			duio_SetButtonOutro duio_ButtonID2UIsetID("dialog_keywordsearch_nomatch_ok"),TRUE
			duio_SetButtonEnable duio_ButtonID2UIsetID("dialog_keywordsearch_nomatch_ok"),FALSE
			duio_SetActiveScene"#MusicSelect",TRUE
			duio_SetActiveScene"#Dialog-KeywordSearch-Nomatch",FALSE
		swbreak

		//決定
		case"musicselect_decide"
			AutoPlayFlag=FALSE
			gosub*scene_MusicSelect_Decide
		swbreak

		//オプション（開く）
		case"musicselect_option"
			//UIパーツを表示
			duio_SetAllButtonVisible"#PlayOption",TRUE
			duio_SetAllImageVisible"#PlayOption",TRUE
			duio_SetAllTextVisible"#PlayOption",TRUE
			duio_InitAllCount"#PlayOption"

			duio_SetButtonEnable duio_ButtonID2UIsetID("playoption_close_0"),TRUE
			optionwindowflag=TRUE:optionwindowclosecount=-1

			duio_SetActiveScene"#PlayOption",TRUE
			duio_SetActiveScene"#MusicSelect",FALSE

			gosub*UpdatePlayOptionUI
		swbreak

		//オプション（閉じる）
		case"playoption_close"
			gosub*scene_MusicSelect_CloseOption
		swbreak

		//オートプレイ
		case"musicselect_autoplay"
			AutoPlayFlag=TRUE
			gosub*scene_MusicSelect_Decide
		swbreak

		//戻る
		case"backscene"
			decidecount=0
			duio_SetActiveScene"#MusicSelect",FALSE
			DecideJumpScene="backscene"
			gosub*onshutter
		swbreak

		//ゲーム終了
		case"game.exit":goto*Exit:swbreak

	swend

	gosub*PlayOption_EventStack

	tmpstr=duio_GetButtonEventStack()
	if strmid(tmpstr,0,7)=="decide:" {
		//曲決定
		strrep tmpstr,"decide:",""
		SearchDBfromUUID tmpstr,curselect_item,curselect_lv
		curselect_count=0
		
		//カウンタ設定
			duio_SetTextCount duio_TextID2UIsetID("musicselect_activeitem_title"),100
			duio_SetTextCount duio_TextID2UIsetID("musicselect_activeitem_artist"),100
			duio_SetTextCount duio_TextID2UIsetID("musicselect_activeitem_lvnormal"),100
			duio_SetTextCount duio_TextID2UIsetID("musicselect_activeitem_lvhard"),100
			duio_SetTextCount duio_TextID2UIsetID("musicselect_activeitem_lvchaos"),100
			duio_SetTextCount duio_TextID2UIsetID("musicselect_activeitem_totalnotes"),100
			duio_SetTextCount duio_TextID2UIsetID("musicselect_activeitem_bpm"),100
			duio_SetTextCount duio_TextID2UIsetID("musicselect_activeitem_mapdesigner"),100
			duio_SetImageCount duio_ImageID2UIsetID("musicselect_artwork"),100
			duio_SetTextCount duio_TextID2UIsetID("musicselect_mybest_score"),150
			duio_SetTextCount duio_TextID2UIsetID("musicselect_mybest_pfpoint"),150
			duio_SetTextCount duio_TextID2UIsetID("musicselect_mybest_numexcellent"),150
			duio_SetTextCount duio_TextID2UIsetID("musicselect_mybest_numgreat"),150
			duio_SetTextCount duio_TextID2UIsetID("musicselect_mybest_numgood"),150
			duio_SetTextCount duio_TextID2UIsetID("musicselect_mybest_numbad"),150
			duio_SetTextCount duio_TextID2UIsetID("musicselect_mybest_nummiss"),150
			duio_SetTextCount duio_TextID2UIsetID("musicselect_mybest_numexcellent_rate"),150
			duio_SetTextCount duio_TextID2UIsetID("musicselect_mybest_numgreat_rate"),150
			duio_SetTextCount duio_TextID2UIsetID("musicselect_mybest_numgood_rate"),150
			duio_SetTextCount duio_TextID2UIsetID("musicselect_mybest_numbad_rate"),150
			duio_SetTextCount duio_TextID2UIsetID("musicselect_mybest_nummiss_rate"),150
			duio_SetTextCount duio_TextID2UIsetID("musicselect_mybest_rank"),150
			duio_SetTextCount duio_TextID2UIsetID("musicselect_mybest_maxcombo"),150
			duio_SetTextCount duio_TextID2UIsetID("musicselect_mybest_cleartype"),150
			duio_SetTextCount duio_TextID2UIsetID("musicselect_mybest_regdate"),150
			duio_SetTextCount duio_TextID2UIsetID("musicselect_mybest_earlylate"),150
			duio_SetTextCount duio_TextID2UIsetID("musicselect_ir_myrank"),150
			duio_SetTextCount duio_TextID2UIsetID("musicselect_ir_myscore"),150

		//UI文字列変更
			gosub*scene_MusicSelect_UpdateMetadataString
			gosub*scene_MusicSelect_CloseLevelSelect
	}

	//フォルダ選択を行ったときのデフォルトのソート処理
		repeat 16
			if duio_GetButtonEventStack()==folder_dropdown_event(cnt) {
				folder_cur=cnt
				if sort_mode!0 :SortMapItem sort_mode
			}
		loop

	//押されたボタンが楽曲アイテムかどうか判別
		sdim tmpstr:sdim tmpdiv
		tmpstr=duio_GetButtonEventStack()
		split tmpstr,",",tmpdiv
		if length(tmpdiv)==3 {
			//難易度選択
			SearchDBfromUUID tmpdiv(0),item,lv
			dim AllLevelLockedFlag:AllLevelLockedFlag=TRUE
			if tmpdiv(0)!"*" {	//NORMAL
				tmpdiv(3)=tmpdiv(0)
				if IsUnlocked(item,lv,TRUE) :AllLevelLockedFlag=FALSE
				duio_SetButtonVisible duio_ButtonID2UIsetID("musicselect_levelselect_normal"),IsUnlocked(item,lv,TRUE)
				duio_SetButtonEvent duio_ButtonID2UIsetID("musicselect_levelselect_normal"),"decide:"+tmpdiv(3)

				SetDrawScreen hdximg(imusicselect_levelsel_normal)
				ClearDrawScreen

				SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
				DrawGraph 0,0,hdximg(imusicselect_levelsel_normalorg),TRUE
				SetDrawBlendMode DX_BLENDMODE_ALPHA,256
				DrawStringToHandle 146,8,str(mapdb_level(item,lv)),$FFFFFF,duio_GetFontHandle("ps40")

				duio_ChangeButtonImage duio_ButtonID2UIsetID("musicselect_levelselect_normal"),hdximg(imusicselect_levelsel_normal)
			}
			SearchDBfromUUID tmpdiv(1),item,lv
			if tmpdiv(1)!"*" {	//HARD
				tmpdiv(3)=tmpdiv(1)
				if IsUnlocked(item,lv,TRUE) :AllLevelLockedFlag=FALSE
				duio_SetButtonVisible duio_ButtonID2UIsetID("musicselect_levelselect_hard"),IsUnlocked(item,lv,TRUE)
				duio_SetButtonEvent duio_ButtonID2UIsetID("musicselect_levelselect_hard"),"decide:"+tmpdiv(3)

				SetDrawScreen hdximg(imusicselect_levelsel_hard)
				ClearDrawScreen

				SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
				DrawGraph 0,0,hdximg(imusicselect_levelsel_hardorg),TRUE
				SetDrawBlendMode DX_BLENDMODE_ALPHA,256
				DrawStringToHandle 146,8,str(mapdb_level(item,lv)),$FFFFFF,duio_GetFontHandle("ps40")

				duio_ChangeButtonImage duio_ButtonID2UIsetID("musicselect_levelselect_hard"),hdximg(imusicselect_levelsel_hard)
			}
			SearchDBfromUUID tmpdiv(2),item,lv
			if tmpdiv(2)!"*" {	//CHAOS
				tmpdiv(3)=tmpdiv(2)
				if IsUnlocked(item,lv,TRUE) :AllLevelLockedFlag=FALSE
				duio_SetButtonVisible duio_ButtonID2UIsetID("musicselect_levelselect_chaos"),IsUnlocked(item,lv,TRUE)
				duio_SetButtonEvent duio_ButtonID2UIsetID("musicselect_levelselect_chaos"),"decide:"+tmpdiv(3)

				SetDrawScreen hdximg(imusicselect_levelsel_chaos)
				ClearDrawScreen

				SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
				DrawGraph 0,0,hdximg(imusicselect_levelsel_chaosorg),TRUE
				SetDrawBlendMode DX_BLENDMODE_ALPHA,256
				DrawStringToHandle 146,8,str(mapdb_level(item,lv)),$FFFFFF,duio_GetFontHandle("ps40")

				duio_ChangeButtonImage duio_ButtonID2UIsetID("musicselect_levelselect_chaos"),hdximg(imusicselect_levelsel_chaos)
			}
			dim item:dim lv
			SearchDBfromUUID tmpdiv(3),item,lv
			duio_AddInImageAnimation_Move duio_ImageID2UIsetID("musicselect_panel_levelselect"),0,200,cursorPosX-661*2,cursorPosY-283*2,ease_cubic_out

			duio_ChangeTextBody duio_TextID2UIsetID("musicselect_text_levelselect_title"),mapdb_title(item,lv)		//タイトル
			duio_ChangeTextBody duio_TextID2UIsetID("musicselect_text_levelselect_artist"),mapdb_artist(item,lv)	//アーティスト名

			duio_SetImageVisible duio_ImageID2UIsetID("musicselect_panel_levelselect"),TRUE:duio_SetImageCount duio_ImageID2UIsetID("musicselect_panel_levelselect"),0
			duio_SetImageVisible duio_ImageID2UIsetID("musicselect_levelselect_artwork"),TRUE:duio_SetImageCount duio_ImageID2UIsetID("musicselect_levelselect_artwork"),0
			duio_ChangeImage duio_ImageID2UIsetID("musicselect_levelselect_artwork"),mapdb_hartwork(item,lv)

			duio_SetTextVisible duio_TextID2UIsetID("musicselect_text_levelselect"),TRUE:duio_SetTextCount duio_TextID2UIsetID("musicselect_text_levelselect"),0
			duio_SetTextVisible duio_TextID2UIsetID("musicselect_text_levelselect_title"),TRUE:duio_SetTextCount duio_TextID2UIsetID("musicselect_text_levelselect_title"),0
			duio_SetTextVisible duio_TextID2UIsetID("musicselect_text_levelselect_artist"),TRUE:duio_SetTextCount duio_TextID2UIsetID("musicselect_text_levelselect_artist"),0

			duio_SetButtonCount duio_ButtonID2UIsetID("musicselect_levelselect_normal"),0
			duio_SetButtonCount duio_ButtonID2UIsetID("musicselect_levelselect_hard"),0
			duio_SetButtonCount duio_ButtonID2UIsetID("musicselect_levelselect_chaos"),0

			duio_SetButtonVisible duio_ButtonID2UIsetID("musicselect_levelselect_close"),TRUE
			duio_SetButtonEnable duio_ButtonID2UIsetID("musicselect_levelselect_close"),TRUE
			repeat mapitem_max
				duio_SetButtonEnable mapitem_uisetid(cnt),FALSE
			loop

			if AllLevelLockedFlag {
				duio_SetImageVisible duio_ImageID2UIsetID("musicselect_levelselect_alllocked"),TRUE:duio_SetImageCount duio_ImageID2UIsetID("musicselect_levelselect_alllocked"),0
			}

			gosub*scene_MusicSelect_PauseAllPreview

			curpreview_time=0
			cfunc64v BASS_ChannelSetAttribute,mapdb_hpreview(item,lv),BASS_ATTRIB_VOL,d2f(0.5)
			cfunc64v BASS_ChannelSetPosition,mapdb_hpreview(item,lv),0,0
			cfunc64v BASS_ChannelPlay,mapdb_hpreview(item,lv)
			curPlayhPreview=mapdb_hpreview(item,lv)
		}

	SetDrawScreen hcommonLayer

	return

*scene_MusicSelect_CloseLevelSelect
	duio_SetImageOutro duio_ImageID2UIsetID("musicselect_panel_levelselect"),TRUE
	duio_SetImageOutro duio_ImageID2UIsetID("musicselect_levelselect_artwork"),TRUE
	duio_SetImageOutro duio_ImageID2UIsetID("musicselect_levelselect_alllocked"),TRUE

	duio_SetTextOutro duio_TextID2UIsetID("musicselect_text_levelselect"),TRUE
	duio_SetTextOutro duio_TextID2UIsetID("musicselect_text_levelselect_title"),TRUE
	duio_SetTextOutro duio_TextID2UIsetID("musicselect_text_levelselect_artist"),TRUE

	duio_SetButtonOutro duio_ButtonID2UIsetID("musicselect_levelselect_normal"),TRUE
	duio_SetButtonOutro duio_ButtonID2UIsetID("musicselect_levelselect_hard"),TRUE
	duio_SetButtonOutro duio_ButtonID2UIsetID("musicselect_levelselect_chaos"),TRUE
	duio_SetButtonOutro duio_ButtonID2UIsetID("musicselect_levelselect_close"),TRUE

	repeat mapitem_max
		duio_SetButtonEnable mapitem_uisetid(cnt),TRUE
	loop

	return

*scene_MusicSelect_CloseOption
	//UIパーツを非表示
	duio_SetAllButtonOutro"#PlayOption"
	duio_SetAllImageOutro"#PlayOption"
	duio_SetAllTextOutro"#PlayOption"

	//閉じるボタンを一時的に無効化
	duio_SetButtonEnable duio_ButtonID2UIsetID("playoption_close_0"),FALSE
	optionwindowclosecount=0

	duio_SetActiveScene"#MusicSelect",TRUE
	duio_SetActiveScene"#PlayOption",FALSE

	return

*scene_MusicSelect_UpdateMetadataString

	//楽曲情報
	duio_ChangeTextBody duio_TextID2UIsetID("musicselect_activeitem_title"),mapdb_title(curselect_item,curselect_lv)
	duio_ChangeTextBody duio_TextID2UIsetID("musicselect_activeitem_artist"),mapdb_artist(curselect_item,curselect_lv)
	duio_ChangeImage duio_ImageID2UIsetID("musicselect_artwork"),mapdb_hartwork(curselect_item,curselect_lv)
	duio_ChangeTextBody duio_TextID2UIsetID("musicselect_activeitem_totalnotes"),str(mapdb_totalnotes(curselect_item,curselect_lv))
	if mapdb_defbpm(curselect_item,curselect_lv)==mapdb_minbpm(curselect_item,curselect_lv)&mapdb_defbpm(curselect_item,curselect_lv)==mapdb_maxbpm(curselect_item,curselect_lv) {
		duio_ChangeTextBody duio_TextID2UIsetID("musicselect_activeitem_bpm"),strf("%.1f",mapdb_defbpm(curselect_item,curselect_lv))
	} else {
		duio_ChangeTextBody duio_TextID2UIsetID("musicselect_activeitem_bpm"),strf("%.1f (%.1f - %.1f)",mapdb_defbpm(curselect_item,curselect_lv),mapdb_minbpm(curselect_item,curselect_lv),mapdb_maxbpm(curselect_item,curselect_lv))
	}
	duio_ChangeTextBody duio_TextID2UIsetID("musicselect_activeitem_mapdesigner"),mapdb_mapdesign(curselect_item,curselect_lv)

	if map_uuid(curselect_item,0)=="*" {
		duio_ChangeTextBody duio_TextID2UIsetID("musicselect_activeitem_lvnormal"),"---"
	} else {
		duio_ChangeTextBody duio_TextID2UIsetID("musicselect_activeitem_lvnormal"),"Lv. "+mapdb_level(curselect_item,0)
	}
	if map_uuid(curselect_item,1)=="*" {
		duio_ChangeTextBody duio_TextID2UIsetID("musicselect_activeitem_lvhard"),"---"
	} else {
		duio_ChangeTextBody duio_TextID2UIsetID("musicselect_activeitem_lvhard"),"Lv. "+mapdb_level(curselect_item,1)
	}
	if map_uuid(curselect_item,2)=="*" {
		duio_ChangeTextBody duio_TextID2UIsetID("musicselect_activeitem_lvchaos"),"---"
	} else {
		duio_ChangeTextBody duio_TextID2UIsetID("musicselect_activeitem_lvchaos"),"Lv. "+mapdb_level(curselect_item,2)
	}

	//自己ベスト記録
	duio_ChangeTextBody duio_TextID2UIsetID("musicselect_mybest_score"),str(mapdb_mybest_score(curselect_item,curselect_lv))
	duio_ChangeTextBody duio_TextID2UIsetID("musicselect_mybest_pfpoint"),str(mapdb_mybest_pfpoint(curselect_item,curselect_lv))
	duio_ChangeTextBody duio_TextID2UIsetID("musicselect_mybest_numexcellent"),str(mapdb_mybest_judgedetail(curselect_item,curselect_lv,JUDGEID_EXCELLENT))
	duio_ChangeTextBody duio_TextID2UIsetID("musicselect_mybest_numgreat"),str(mapdb_mybest_judgedetail(curselect_item,curselect_lv,JUDGEID_GREAT))
	duio_ChangeTextBody duio_TextID2UIsetID("musicselect_mybest_numgood"),str(mapdb_mybest_judgedetail(curselect_item,curselect_lv,JUDGEID_GOOD))
	duio_ChangeTextBody duio_TextID2UIsetID("musicselect_mybest_numbad"),str(mapdb_mybest_judgedetail(curselect_item,curselect_lv,JUDGEID_BAD))
	duio_ChangeTextBody duio_TextID2UIsetID("musicselect_mybest_nummiss"),str(mapdb_mybest_judgedetail(curselect_item,curselect_lv,JUDGEID_MISS))
	duio_ChangeTextBody duio_TextID2UIsetID("musicselect_mybest_numexcellent_rate"),str(double(mapdb_mybest_judgedetail(curselect_item,curselect_lv,JUDGEID_EXCELLENT))/double(mapdb_totalnotes(curselect_item,curselect_lv))*100.0)
	duio_ChangeTextBody duio_TextID2UIsetID("musicselect_mybest_numgreat_rate"),str(double(mapdb_mybest_judgedetail(curselect_item,curselect_lv,JUDGEID_GREAT))/double(mapdb_totalnotes(curselect_item,curselect_lv))*100.0)
	duio_ChangeTextBody duio_TextID2UIsetID("musicselect_mybest_numgood_rate"),str(double(mapdb_mybest_judgedetail(curselect_item,curselect_lv,JUDGEID_GOOD))/double(mapdb_totalnotes(curselect_item,curselect_lv))*100.0)
	duio_ChangeTextBody duio_TextID2UIsetID("musicselect_mybest_numbad_rate"),str(double(mapdb_mybest_judgedetail(curselect_item,curselect_lv,JUDGEID_BAD))/double(mapdb_totalnotes(curselect_item,curselect_lv))*100.0)
	duio_ChangeTextBody duio_TextID2UIsetID("musicselect_mybest_nummiss_rate"),str(double(mapdb_mybest_judgedetail(curselect_item,curselect_lv,JUDGEID_MISS))/double(mapdb_totalnotes(curselect_item,curselect_lv))*100.0)
	duio_ChangeTextBody duio_TextID2UIsetID("musicselect_mybest_rank"),GetScoreRank(double(mapdb_mybest_score(curselect_item,curselect_lv))/10000000.0*100.0)
	duio_ChangeTextBody duio_TextID2UIsetID("musicselect_mybest_maxcombo"),str(mapdb_mybest_maxcombo(curselect_item,curselect_lv))
	duio_ChangeTextBody duio_TextID2UIsetID("musicselect_mybest_cleartype"),mapdb_mybest_cleartype(curselect_item,curselect_lv)
	duio_ChangeTextBody duio_TextID2UIsetID("musicselect_mybest_regdate"),mapdb_mybest_regdate(curselect_item,curselect_lv)
	duio_ChangeTextBody duio_TextID2UIsetID("musicselect_mybest_earlylate"),strf("%04d",mapdb_mybest_judgedetail(curselect_item,curselect_lv,JUDGEID_EARLY))+" / "+strf("%04d",mapdb_mybest_judgedetail(curselect_item,curselect_lv,JUDGEID_LATE))

	//IR
	duio_ChangeTextBody duio_TextID2UIsetID("musicselect_ir_myrank"),str(mapdb_ir_myrank(curselect_item,curselect_lv)+1)+" / "+str(mapdb_ir_regmax(curselect_item,curselect_lv))
	duio_ChangeTextBody duio_TextID2UIsetID("musicselect_ir_myscore"),str(mapdb_ir_score(curselect_item,curselect_lv,mapdb_ir_myrank(curselect_item,curselect_lv)))

	return

*scene_MusicSelect_Decide
	decidecount=0
	DecideJumpScene="play"

	duio_SetActiveScene"#MusicSelect",FALSE

	PauseMovieToGraph hdximg(ibg_common)

	if curpreview_time>9000|curpreview_time==-1 {
		gosub*scene_MusicSelect_PauseAllPreview
		duio_StopSound"main"
		cfunc64v BASS_ChannelSetPosition,mapdb_hpreview(curselect_item,curselect_lv),0,0
		cfunc64v BASS_ChannelPlay,mapdb_hpreview(curselect_item,curselect_lv)
		curPlayhPreview=mapdb_hpreview(curselect_item,curselect_lv)
	}

	duio_ChangeImage duio_ImageID2UIsetID("musicdecide_artwork"),mapdb_hartwork(curselect_item,curselect_lv)

	duio_ChangeTextBody duio_TextID2UIsetID("musicdecide_title"),mapdb_title(curselect_item,curselect_lv)
	duio_ChangeTextBody duio_TextID2UIsetID("musicdecide_artist"),mapdb_artist(curselect_item,curselect_lv)+" / from "+mapdb_source(curselect_item,curselect_lv)+" / Map by "+mapdb_mapdesign(curselect_item,curselect_lv)
	duio_ChangeTextBody duio_TextID2UIsetID("musicdecide_level"),str(mapdb_level(curselect_item,curselect_lv))
	if mapdb_defbpm(curselect_item,curselect_lv)==mapdb_minbpm(curselect_item,curselect_lv)&mapdb_defbpm(curselect_item,curselect_lv)==mapdb_maxbpm(curselect_item,curselect_lv) {
		duio_ChangeTextBody duio_TextID2UIsetID("musicdecide_bpm"),strf("%.2f",mapdb_defbpm(curselect_item,curselect_lv))
	} else {
		duio_ChangeTextBody duio_TextID2UIsetID("musicdecide_bpm"),strf("%.2f (%.2f - %.2f)",mapdb_defbpm(curselect_item,curselect_lv),mapdb_minbpm(curselect_item,curselect_lv),mapdb_maxbpm(curselect_item,curselect_lv))
	}
	duio_ChangeTextBody duio_TextID2UIsetID("musicdecide_totalnotes"),str(mapdb_totalnotes(curselect_item,curselect_lv))

	duio_ChangeImage duio_ImageID2UIsetID("musicdecide_level_img"),hdximg(imusicselect_item_normal+curselect_lv)

	duio_PlaySound"voice_start_"+rnd(3)

	return

*scene_MusicSelect_free
	duio_StopSound"main"
	return

*scene_MusicSelect_PauseAllPreview
	repeat mapgroup_max*3
		cfunc64v BASS_ChannelPause,mapdb_hpreview(cnt/3,cnt\3)
	loop
	return

//CreateMapItem _type,_folder,_initflag
#deffunc _CreateMapItem int _type,str _folder,int _initflag,str _search

	if _initflag :ClearMapItem

	logmes GetTimeStamp()+" [duio-scene] Create map item (type="+_type+",folder="+_folder+")"

	folder_mode=_type

	if _type==MAPITEM_TYPE_GROUP {
		//ボタン作成
		dim mapitem_max
		dim mapitem_himg,mapgroup_max
		dim mapitem_uisetid,mapgroup_max
		repeat mapgroup_max

			//フォルダー分け条件分岐
				if _folder=="folder_dropdown_s1" {
					if (mapdb_release(cnt,2)==0)==FALSE :continue
				}

			//検索ワード
				if _search!"" {
					sdim tmpsearchdest,64,2
					tmpsearchdest=getpath(mapdb_title(cnt,2),16),getpath(mapdb_artist(cnt,2),16)
					if instr(tmpsearchdest(0),0,getpath(_search,16))==-1&instr(tmpsearchdest(1),0,getpath(_search,16))==-1 :continue
					logmes GetTimeStamp()+" [duio-scene] Matched search (word="+_search+",group_id="+cnt+")"
				}

			//ボタン画像作成
				mapitem_himg(mapitem_max)=MakeScreen(286,386,TRUE)
				SetDrawScreen mapitem_himg(mapitem_max)

				//背景・ジャケット画像
				SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
				DrawGraph 0,0,hdximg(imusicselect_bg_songitem),TRUE
				DrawExtendGraph 39,23,39+200,23+200,mapdb_hartwork(cnt,2),FALSE

				//曲名
				SetDrawBlendMode DX_BLENDMODE_ALPHA,256
				DrawStringXCenterToHandle 0,239,mapdb_title(cnt,2),288,$000000,duio_GetFontHandle("rom1cm16")

				//難易度
				SetDrawBlendMode DX_BLENDMODE_ALPHA,256
				if map_uuid(cnt,0)!"*"&IsUnlocked(cnt,0,TRUE) {
					DrawGraph 39+72*0,312,hdximg(imusicselect_item_normal),TRUE
					DrawStringXCenterToHandle 63,283,str(mapdb_level(cnt,0)),16,$000000,duio_GetFontHandle("ps32")
					DrawStringXCenterToHandle 53+72*0,349,ConvClearType2ShortStyle(mapdb_mybest_cleartype(cnt,0)),36,$000000,duio_GetFontHandle("ps10")
				}
				if map_uuid(cnt,1)!"*"&IsUnlocked(cnt,1,TRUE) {
					DrawGraph 39+72*1,312,hdximg(imusicselect_item_hard),TRUE
					DrawStringXCenterToHandle 133,283,str(mapdb_level(cnt,1)),20,$000000,duio_GetFontHandle("ps32")
					DrawStringXCenterToHandle 53+72*1,349,ConvClearType2ShortStyle(mapdb_mybest_cleartype(cnt,1)),36,$000000,duio_GetFontHandle("ps10")

				}
				if map_uuid(cnt,2)!"*"&IsUnlocked(cnt,2,TRUE) {
					DrawGraph 39+72*2,312,hdximg(imusicselect_item_chaos),TRUE
					DrawStringXCenterToHandle 202,283,str(mapdb_level(cnt,2)),26,$000000,duio_GetFontHandle("ps32")
					DrawStringXCenterToHandle 53+72*2,349,ConvClearType2ShortStyle(mapdb_mybest_cleartype(cnt,2)),36,$000000,duio_GetFontHandle("ps10")
				}

				if IsUnlocked(cnt,0,TRUE)==FALSE&IsUnlocked(cnt,1,TRUE)==FALSE&IsUnlocked(cnt,2,TRUE)==FALSE {
					DrawGraph 8,8,hdximg(imusicselect_item_locked),TRUE
				}
			
			//duioに登録
				duio_CreateButton"#MusicSelect","item@"+mapitem_max,mapitem_himg(mapitem_max),674+306*(mapitem_max\4),159+406*(mapitem_max/4),286,386
				mapitem_uisetid(mapitem_max)=stat
				duio_AddInButtonAnimation_Zoom mapitem_uisetid(mapitem_max),300+35*mapitem_max,350,0,ease_cubic_out
				duio_SetButtonEvent mapitem_uisetid(mapitem_max),map_uuid(cnt,0)+","+map_uuid(cnt,1)+","+map_uuid(cnt,2)
				duio_SetButtonPushSound mapitem_uisetid(mapitem_max),"pushbutton"

				mapitem_max++
		loop

	}
	if _type==MAPITEM_TYPE_SINGLE {
		//ボタン作成
		dim mapitem_max
		dim mapitem_himg
		dim mapitem_uisetid
		dim item:dim lv
		repeat mapgroup_max*3

			item=cnt/3:lv=cnt\3

			if map_uuid(item,lv)=="*" :continue

			//フォルダー分け条件分岐
				if _folder=="folder_dropdown_lv1_4" {
					if (mapdb_level(item,lv)>=1&mapdb_level(item,lv)<=4)==FALSE :continue
				}
				if _folder=="folder_dropdown_lv5_8" {
					if (mapdb_level(item,lv)>=5&mapdb_level(item,lv)<=8)==FALSE :continue
				}
				if _folder=="folder_dropdown_lv9_11" {
					if (mapdb_level(item,lv)>=9&mapdb_level(item,lv)<=11)==FALSE :continue
				}
				if _folder=="folder_dropdown_lv12" {
					if (mapdb_level(item,lv)==12)==FALSE :continue
				}

				if _folder=="folder_dropdown_normal" {
					if (lv==0)==FALSE :continue
				}
				if _folder=="folder_dropdown_hard" {
					if (lv==1)==FALSE :continue
				}
				if _folder=="folder_dropdown_chaos" {
					if (lv==2)==FALSE :continue
				}

				if _folder=="folder_dropdown_ex" {
					if GetScoreRank(double(mapdb_mybest_score(item,lv))/10000000.0*100.0)!"EX" :continue
				}
				if _folder=="folder_dropdown_s" {
					if GetScoreRank(double(mapdb_mybest_score(item,lv))/10000000.0*100.0)!"S" :continue
				}
				if _folder=="folder_dropdown_aaa" {
					if GetScoreRank(double(mapdb_mybest_score(item,lv))/10000000.0*100.0)!"AAA" :continue
				}
				if _folder=="folder_dropdown_aa" {
					if GetScoreRank(double(mapdb_mybest_score(item,lv))/10000000.0*100.0)!"AA" :continue
				}
				if _folder=="folder_dropdown_a" {
					if GetScoreRank(double(mapdb_mybest_score(item,lv))/10000000.0*100.0)!"A" :continue
				}

				if _folder=="folder_dropdown_failed" {
					if mapdb_mybest_cleartype(item,lv)!common_cleartype(CLEARTYPE_FAILED) :continue
				}
				if _folder=="folder_dropdown_assist" {
					if mapdb_mybest_cleartype(item,lv)!common_cleartype(CLEARTYPE_ASSIST) :continue
				}
				if _folder=="folder_dropdown_clear" {
					if mapdb_mybest_cleartype(item,lv)!common_cleartype(CLEARTYPE_CLEAR) :continue
				}
				if _folder=="folder_dropdown_expert" {
					if mapdb_mybest_cleartype(item,lv)!common_cleartype(CLEARTYPE_EXPERT) :continue
				}
				if _folder=="folder_dropdown_madness" {
					if mapdb_mybest_cleartype(item,lv)!common_cleartype(CLEARTYPE_MADNESS) :continue
				}
				if _folder=="folder_dropdown_fc" {
					if mapdb_mybest_cleartype(item,lv)!common_cleartype(CLEARTYPE_FC) :continue
				}
				if _folder=="folder_dropdown_allex" {
					if mapdb_mybest_cleartype(item,lv)!common_cleartype(CLEARTYPE_ALLEX) :continue
				}

				if _folder=="folder_dropdown_s1" {
					if (mapdb_release(item,lv)==0)==FALSE :continue
				}

			//検索ワード
				if _search!"" {
					sdim tmpsearchdest,64,2
					tmpsearchdest=getpath(mapdb_title(item,lv),16),getpath(mapdb_artist(item,lv),16)
					if instr(tmpsearchdest(0),0,getpath(_search,16))==-1&instr(tmpsearchdest(1),0,getpath(_search,16))==-1 :continue
					logmes GetTimeStamp()+" [duio-scene] Matched search (word="+_search+",item="+item+",lv"+lv+")"
				}

			//ボタン画像作成
				mapitem_himg(mapitem_max)=MakeScreen(286,386,TRUE)
				SetDrawScreen mapitem_himg(mapitem_max)

				//背景・ジャケット画像
				SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
				DrawGraph 0,0,hdximg(imusicselect_bg_songitem),TRUE
				DrawExtendGraph 39,23,39+200,23+200,mapdb_hartwork(item,lv),FALSE

				//曲名
				SetDrawBlendMode DX_BLENDMODE_ALPHA,256
				DrawStringXCenterToHandle 0,239,mapdb_title(item,lv),288,$000000,duio_GetFontHandle("rom1cm16")

				//難易度
				SetDrawBlendMode DX_BLENDMODE_ALPHA,256
				if IsUnlocked(item,lv,TRUE) {
					DrawStringXCenterToHandle 133,283,str(mapdb_level(item,lv)),20,$000000,duio_GetFontHandle("ps32")
					DrawGraph 39+72*1,312,hdximg(imusicselect_item_normal+lv),TRUE
					DrawStringXCenterToHandle 53+72*1,349,ConvClearType2ShortStyle(mapdb_mybest_cleartype(item,lv)),36,$000000,duio_GetFontHandle("ps10")
				} else {
					DrawGraph 8,8,hdximg(imusicselect_item_locked),TRUE
				}
			
			//duioに登録
				duio_CreateButton"#MusicSelect","item@"+mapitem_max,mapitem_himg(mapitem_max),674+306*(mapitem_max\4),159+406*(mapitem_max/4),286,386
				mapitem_uisetid(mapitem_max)=stat
				duio_AddInButtonAnimation_Zoom mapitem_uisetid(mapitem_max),300+35*mapitem_max,350,0,ease_cubic_out
				if lv==0 :duio_SetButtonEvent mapitem_uisetid(mapitem_max),map_uuid(item,0)+",*,*"
				if lv==1 :duio_SetButtonEvent mapitem_uisetid(mapitem_max),"*,"+map_uuid(item,1)+",*"
				if lv==2 :duio_SetButtonEvent mapitem_uisetid(mapitem_max),"*,*,"+map_uuid(item,2)
				duio_SetButtonPushSound mapitem_uisetid(mapitem_max),"pushbutton"

			mapitem_max++
		loop
	}

	if mapitem_max==0&_search!"" {
		duio_SetImageVisible duio_ImageID2UIsetID("dialog_keywordsearch_nomatch"),TRUE
		duio_SetButtonVisible duio_ButtonID2UIsetID("dialog_keywordsearch_nomatch_ok"),TRUE
		duio_SetButtonEnable duio_ButtonID2UIsetID("dialog_keywordsearch_nomatch_ok"),TRUE
		duio_SetActiveScene"#MusicSelect",FALSE
		duio_SetActiveScene"#Dialog-KeywordSearch-Nomatch",TRUE
	}

	return

#deffunc OpenHelpDialog str x
	helpscene=x
	duio_SetActiveScene"#PlayOption",FALSE
	duio_SetActiveScene x,TRUE
	duio_SetAllButtonVisible x,TRUE
	duio_SetAllImageVisible x,TRUE
	duio_InitAllCount x
	return
#deffunc CloseHelpDialog str x
	duio_SetActiveScene"#PlayOption",TRUE
	duio_SetActiveScene x,FALSE
	duio_SetAllImageOutro x
	duio_SetAllButtonOutro x
	return

#deffunc ClearMapItem

	logmes GetTimeStamp()+" [duio-scene] Clear map item"

	repeat mapitem_max
		DeleteGraph mapitem_himg(cnt)
		duio_DeleteButton mapitem_uisetid(0)
	loop

	return

#deffunc SortMapItem int _type

	sort_mode=_type

	CreateMapItem folder_mode,folder_dropdown_event(folder_cur),TRUE

	if _type==MAPITEM_SORT_DEFAULT :return

	//譜面単位でソートが必要な場合、項目を再生成する
	if folder_mode==MAPITEM_TYPE_GROUP&_type==MAPITEM_SORT_LEVEL :CreateMapItem MAPITEM_TYPE_SINGLE,folder_dropdown_event(folder_cur),TRUE
	if folder_mode==MAPITEM_TYPE_GROUP&_type==MAPITEM_SORT_SCORE :CreateMapItem MAPITEM_TYPE_SINGLE,folder_dropdown_event(folder_cur),TRUE
	if folder_mode==MAPITEM_TYPE_GROUP&_type==MAPITEM_SORT_CLEARTYPE :CreateMapItem MAPITEM_TYPE_SINGLE,folder_dropdown_event(folder_cur),TRUE

		dim sortdest_map:sdim sorttar_map:dim sorttar_mode
		repeat mapitem_max
			dim sortdest_item:dim sortdest_lv
			sdim tmpstr
			tmpstr=duio_GetButtonEvent(mapitem_uisetid(cnt))
			split tmpstr,",",tmpstr(1),tmpstr(2),tmpstr(3)
			if tmpstr(1)!"*" :tmpstr(4)=tmpstr(1)
			if tmpstr(2)!"*" :tmpstr(4)=tmpstr(2)
			if tmpstr(3)!"*" :tmpstr(4)=tmpstr(3)
			SearchDBfromUUID tmpstr(4),sortdest_item,sortdest_lv

			if _type==MAPITEM_SORT_NAME {
				if cnt==0 :sdim sortdest_map
				sortdest_map(cnt)=mapdb_title(sortdest_item,sortdest_lv)
				sorttar_mode=1
			}
			if _type==MAPITEM_SORT_LEVEL {
				sortdest_map(cnt)=mapdb_level(sortdest_item,sortdest_lv)
				sorttar_mode=0
			}
			if _type==MAPITEM_SORT_BPM {
				sortdest_map(cnt)=mapdb_defbpm(sortdest_item,sortdest_lv)
				sorttar_mode=0
			}
			if _type==MAPITEM_SORT_SCORE {
				sortdest_map(cnt)=mapdb_mybest_score(sortdest_item,sortdest_lv)
				sorttar_mode=0
			}
			if _type==MAPITEM_SORT_CLEARTYPE {
				sortdest_map(cnt)=0
				repeat length(common_cleartype)
					if common_cleartype(cnt)==mapdb_mybest_cleartype(sortdest_item,sortdest_lv) {
						sortdest_map(cnt)=cnt
						break
					}
				loop
				sorttar_mode=0
			}
			sorttar_map(cnt)=sortdest_map(cnt)
		loop
		if sorttar_mode==0 :sortval sorttar_map,1:else:sortstr sorttar_map,0
	
	dim searchlevel:dim tarmaplist:dim searchalready,mapitem_max
	repeat length(sorttar_map)
		i=cnt
		searchlevel=sorttar_map(cnt)
		repeat mapitem_max
			if sortdest_map(cnt)==searchlevel&searchalready(cnt)==FALSE {
				tarmaplist(i)=cnt
				searchalready(cnt)=TRUE
				break
			}
		loop
	loop

	dim tmpbuttonhimg
	sdim tmpbuttonevent
	repeat mapitem_max
		tmpbuttonhimg(cnt)=duio_GetButtonhImg(mapitem_uisetid(cnt))
		tmpbuttonevent(cnt)=duio_GetButtonEvent(mapitem_uisetid(cnt))
	loop
	repeat mapitem_max
		duio_ChangeButtonImage mapitem_uisetid(cnt),tmpbuttonhimg(tarmaplist(cnt))
		duio_SetButtonEvent mapitem_uisetid(cnt),tmpbuttonevent(tarmaplist(cnt))
	loop

	return